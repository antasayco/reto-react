{"version":3,"sources":["config.js","App.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","$","window","App","state","nombre","apellido","edad","fechaNac","allReg","promedioEdad","varianzaEdad","getTodosEmpleados","allUserArray","calPromedioEdad","calVarianza","ref","once","then","snapShot","setPromedioEdad","setVarianza","count","forEach","item","Number","val","push","id","key","Math","sqrt","toFixed","setState","fechaProbableMuerte","fechaDeNacimiento","fechaActual","d","Date","getTime","random","mes","getMonth","dia","getDate","anio","getFullYear","length","join","submit","e","preventDefault","fechaDie","split","modal","this","className","href","data-toggle","map","persona","row","onSubmit","type","data-dismiss","aria-hidden","onChange","target","value","required","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.257be848.chunk.js","sourcesContent":["import  * as firebase from 'firebase'\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyB7nVslSyAOHJaCjzbC7u25KN9iuS2Cono\",\n  authDomain: \"apprad1us.firebaseapp.com\",\n  databaseURL: \"https://apprad1us.firebaseio.com\",\n  projectId: \"apprad1us\",\n  storageBucket: \"apprad1us.appspot.com\",\n  messagingSenderId: \"676953073431\",\n  appId: \"1:676953073431:web:c6e1a9d432484d37af7952\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);","import React, { Component } from 'react';\nimport './config';\nimport * as firebase from 'firebase'\nconst $ = window.$;\n\nexport default class App extends Component{\n\n  state = {\n    nombre: \"\",\n    apellido: \"\",\n    edad: 0,\n    fechaNac: \"\",\n    allReg: [],\n    promedioEdad: 0,\n    varianzaEdad: 0\n  }\n  \n  componentDidMount(){\n    // Listando los registros\n    this.getTodosEmpleados()\n  }\n  \n  // Obtenemos los datos de la db\n  getTodosEmpleados = () => {\n    let allUserArray = [];\n    let calPromedioEdad = 0;\n    let calVarianza = 0;\n    firebase\n      .database()\n      .ref(\"users\")\n      .once(\"value\")\n      .then(snapShot => {\n        var count = 0,\n          setPromedioEdad = 0,\n          setVarianza = 0;\n        // Recorremos todos para sacar el promedio\n        snapShot.forEach(item => {\n          count++;\n          calPromedioEdad = calPromedioEdad + Number(item.val().edad)\n          allUserArray.push({\n            id: item.key,\n            ...item.val()\n          })\n        });\n        setPromedioEdad = (calPromedioEdad / count);\n        // Recorremos nuevamente para obtener la varianza\n        snapShot.forEach(item => {\n          calVarianza += (Number(item.val().edad) - setPromedioEdad) ** 2\n        });\n        setVarianza = (Math.sqrt((calVarianza / (count - 1)))).toFixed(2);\n        this.setState({\n          allReg: allUserArray,\n          promedioEdad: setPromedioEdad,\n          varianzaEdad: setVarianza\n        })\n      })\n  }\n\n  /**\n   * Calcula la fecha de una posible muerte!\n   */\n  fechaProbableMuerte = (fechaDeNacimiento, fechaActual) => {\n    // Limita la edad hasta 82 años aprox\n    let generateRandomNumber = function () {\n      var min = 0.0200,\n          max = 0.750,\n          highlightedNumber = Math.random() * (max - min) + min;\n      return highlightedNumber;\n    };\n    let  d = new Date(fechaDeNacimiento.getTime() + generateRandomNumber() * (fechaActual.getTime() + fechaDeNacimiento.getTime())),\n      mes = '' + (d.getMonth() + 1),\n      dia = '' + d.getDate(),\n      anio = d.getFullYear();\n    if (mes.length < 2) mes = '0' + mes;\n    if (dia.length < 2) dia = '0' + dia;\n    return [anio, mes, dia].join('-');\n  }\n\n  /**\n   * Si damos guardar!\n   */\n  submit = e => {\n    e.preventDefault();\n    //\n    firebase\n      .database()\n      .ref(\"users\")\n      .push({\n        nombre: this.state.nombre,\n        apellido: this.state.apellido,\n        edad: this.state.edad,\n        fechaNac: this.state.fechaNac,\n        fechaDie: this.fechaProbableMuerte(\n          new Date(this.state.fechaNac.split(\"-\")[0], this.state.fechaNac.split(\"-\")[1], this.state.fechaNac.split(\"-\")[2]),\n          new Date()\n        )\n      })\n    this.getTodosEmpleados();\n    // Cerramos el modal\n    $('#addEmpleadoModal').modal('hide');\n  }\n  \n  render(){\n    return(\n      <div className=\"container\">\n        <div className=\"table-wrapper\">\n          <div className=\"table-title\">\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <h2>Listado de <b>Empleados</b></h2>\n              </div>\n              <div className=\"col-sm-6\">\n                <a href=\"#addEmpleadoModal\" className=\"btn btn-success\" data-toggle=\"modal\">\n                  <i className=\"material-icons\">&#xE147;</i> <span>Agregar nuevo empleado</span>\n                </a>\n              </div>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <section className=\"cards\">\n                <div className=\"card card--oil\">\n                  <div className=\"card__count-container\">\n                    <div className=\"card__count-text\">\n                      <span className=\"card__count-text--big\">{this.state.promedioEdad}</span>\n                    </div>\n                  </div>\n                  <div className=\"card__stuff-container\">\n                    <div className=\"card__stuff-text\"> - Promedio de edad</div>\n                  </div>\n                </div>\n                <div className=\"card card--oil\">\n                  <div className=\"card__count-container\">\n                    <div className=\"card__count-text\">\n                      <span className=\"card__count-text--big\">{this.state.varianzaEdad}</span>\n                    </div>\n                  </div>\n                  <div className=\"card__stuff-container\">\n                    <div className=\"card__stuff-text\"> - Desviación estándar</div>\n                  </div>\n                </div>\n              </section>\n            </div>\n          </div>\n          <table className=\"table table-striped table-hover\">\n            <thead>\n              <tr>\n                <th> - </th>\n                <th>Nombre</th>\n                <th>Apellido</th>\n                <th>Edad</th>\n                <th>Fecha de Nacimiento</th>\n                <th>Fecha Probable de Muerte</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.allReg.map(function(persona, row){\n                return (\n                  <tr key={row}>\n                    <td>{(row + 1)}</td>\n                    <td>{persona.nombre}</td>\n                    <td>{persona.apellido}</td>\n                    <td>{persona.edad}</td>\n                    <td>{persona.fechaNac}</td>\n                    <td>{persona.fechaDie}</td>\n                  </tr>\n                )\n              })}\n            </tbody>\n          </table>\n        </div>\n        <div id=\"addEmpleadoModal\" className=\"modal fade\">\n          <div className=\"modal-dialog\">\n            <div className=\"modal-content\">\n              <form onSubmit={ (e) => this.submit(e) }>\n                <div className=\"modal-header\">\n                  <h4 className=\"modal-title\">Agregar Empleado</h4>\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\n                </div>\n                <div className=\"modal-body\">\n                  <div className=\"form-group\">\n                    <label>Nombre</label>\n                    <input type=\"text\" onChange={ e => this.setState({ nombre: e.target.value }) } className=\"form-control\" required />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Apellido</label>\n                    <input type=\"text\" onChange={ e => this.setState({ apellido: e.target.value }) } className=\"form-control\" required />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Edad</label>\n                    <input type=\"text\" onChange={ e => this.setState({ edad: e.target.value }) } className=\"form-control\" required />\n                  </div>\n                  <div className=\"form-group\">\n                    <label>Fecha de Nacimiento</label>\n                    <input type=\"date\" onChange={ e => this.setState({ fechaNac: e.target.value }) } className=\"form-control\" required />\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <input type=\"button\" className=\"btn btn-default\" data-dismiss=\"modal\" value=\"Cancelar\" />\n                  <input type=\"submit\" className=\"btn btn-success\" value=\"Agregar\" />\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}